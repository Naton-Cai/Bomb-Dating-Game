[gd_scene load_steps=21 format=3 uid="uid://c7xkdg718y47j"]

[ext_resource type="Texture2D" uid="uid://c2tgy4mju56wd" path="res://Assets/BaseBombLipClosed.png" id="2_qu584"]
[ext_resource type="PackedScene" uid="uid://qyot1mmfd7bu" path="res://Assets/Fire Particle/fire.tscn" id="3_0r45t"]
[ext_resource type="Script" path="res://Test.gd" id="3_kalhs"]
[ext_resource type="Script" path="res://Scene/Date Scene/Shading.gd" id="4_lhk8f"]
[ext_resource type="Theme" uid="uid://dy7wlue6gsv5v" path="res://UI/Font/font.tres" id="5_48xbn"]
[ext_resource type="Script" path="res://UI/Health_bar/Fuse_Health_Bar.gd" id="6_fhqux"]
[ext_resource type="PackedScene" uid="uid://p86tv4qksnnh" path="res://Assets/Fuse/fuse.tscn" id="6_li2h0"]
[ext_resource type="Texture2D" uid="uid://dhtweeepk6mko" path="res://Assets/Asprite Project Files (REMOVE AFTER COMPLETION)/BackgroundNoLight.png" id="7_bw138"]
[ext_resource type="Texture2D" uid="uid://dx3ggku2qio5p" path="res://Assets/Table.png" id="8_aot8k"]
[ext_resource type="Texture2D" uid="uid://dvq0n4crptak6" path="res://Assets/bar border.png" id="9_47hvg"]
[ext_resource type="Texture2D" uid="uid://cmpxt6e8kmkpu" path="res://Assets/Fire Particle/Firefly_Light_03_A.png" id="9_krnnp"]
[ext_resource type="Texture2D" uid="uid://sukrpu8xl3l7" path="res://Assets/candle.png" id="10_h1f8n"]
[ext_resource type="Texture2D" uid="uid://yi42vlutxr1v" path="res://Assets/white bar.png" id="10_lheu7"]
[ext_resource type="Script" path="res://UI/Health_bar/Health_Bar.gd" id="12_qascy"]

[sub_resource type="GDScript" id="GDScript_r6vsr"]
script/source = "extends Node2D
@onready var Bomb = $Bomb
@onready var round_end_timer = $round_end
@onready var Game_end_timer = $Game_Fuse_Timer
@onready var update_timer = $update
@onready var fuse_health = $Fuse
@onready var score = $UI/Score

@onready var ComfortBar = $UI/ComfortBar
@onready var EngageBar = $UI/EngageBar
@onready var RomanceBar = $UI/RomanceBar
@onready var HappinessBar = $UI/HappinessBar
@onready var text_json = JSON.parse_string(FileAccess.get_file_as_string(\"res://UI/Dialog/questions.json\"))

var current_question_num = null
var response: Array[String] = []
var question: Array[String] = []
var reaction: Array[String] = []

var flag = false
var dialog_ui
var button1
var button2
var button3
var button4

var Active_Passive = 0
var Emotional_Logical = 0
var Extroverted_Introverted = 0
var Postive_Negative = 0

var Engagement = 100
var Romantic = 100
var Comfort = 100
var Happiness = 100

var round_counter = 0
var game_time = 60

#personality will be randomly determined from -100 to 100
func generate_personality():
	Active_Passive = randi_range( -100, 100)
	Emotional_Logical = randi_range( -100, 100)
	Extroverted_Introverted = randi_range( -100, 100)
	Postive_Negative = randi_range( -100, 100)

#generates the questions
func generate_question():
	if round_counter%4 == 0 and round_counter != 0:
		current_question_num = -1
		question = [\"What would you want to know about me?\"]
	else:
		var temp = randi_range(0, text_json.size()-1)
		#ensures we don't have immediate repeats
		while temp == current_question_num:
			temp = randi_range(0, text_json.size()-1)	
		current_question_num = temp
		question = [text_json[current_question_num][\"question\"]]
	
	
	
func generate_response(q:String):
	#every 4 rounds you get to ask a question
	if round_counter%4 == 0 and round_counter != 0 or current_question_num == -1:
		response = [
		\"What would you like to ask?\",
		\"Option 1\",
		\"Option 2\",
		\"Option 3\",
		\"Option 4\",
		]
	else:
		#gets 4 random rensponses with no duplicates
		var response_text= []
		var list = text_json[current_question_num][\"answers\"].duplicate() 
		for i in range(4):
			var x = randi()%list.size()
			response_text.append(list[x][\"response\"])
			list.remove_at(x)
		print(text_json[current_question_num][\"answers\"])
		response = [
		\"What would you like to say?\",
		response_text[0],
		response_text[1],
		response_text[2],
		response_text[3],
		]


func generate_reaction(r: String, answered: int):
	var array = [\"I like that\", \"I don't like that\", \"I love that\", \"I hate that\"]
	reaction = [str(array[answered])]
	#calls the TextManager to display the textbox aboxe the bomb
	TextManager.start_text(Bomb.global_position, reaction)
	
	
#generates each round
func generate_round():
	#print(text_json.size())
	generate_question()
	generate_response(question[0])
	#spawns in the dialog menu, it returns the object so we can use it later
	#starts displaying the dialog listed
	DialogManager.start_dialog(response)
	
	#calls the TextManager to display the textbox aboxe the bomb
	TextManager.start_text(Bomb.global_position, question)
	
	#get each button from the dialog window UI
	button1 = dialog_ui.get_node(\"TextureRect/Entry1/VBoxContainer/Button1\")
	button2 = dialog_ui.get_node(\"TextureRect/Entry1/VBoxContainer/Button2\")
	button3 = dialog_ui.get_node(\"TextureRect/Entry1/VBoxContainer/Button3\")
	button4 = dialog_ui.get_node(\"TextureRect/Entry1/VBoxContainer/Button4\")
	
	#connect each button to it's corosponding signal
	button1.pressed.connect(self._on_button_1_pressed)
	button2.pressed.connect(self._on_button_2_pressed)
	button3.pressed.connect(self._on_button_3_pressed)
	button4.pressed.connect(self._on_button_4_pressed)


#calcuates the drain effect on each emotional bar
func calculate_drain():
	var time_deducted = 0
	if Engagement > 0:
		Engagement = max(0, Engagement-10)
		EngageBar.set_health(Engagement,20)
	else:
		time_deducted += 1
	if Romantic > 0:	
		Romantic = max(0, Romantic-10)
		RomanceBar.set_health(Romantic,20)
	else:
		time_deducted += 1
	if Comfort > 0:	
		Comfort = max(0, Comfort-10)
		ComfortBar.set_health(Comfort,20)
	else:
		time_deducted += 1
	if Happiness > 0:	
		Happiness = max(0, Happiness-10)
		HappinessBar.set_health(Happiness,20)
	else:
		time_deducted += 1
	Game_end_timer.wait_time = max(Game_end_timer.time_left-time_deducted, 1)
	if !Game_end_timer.is_stopped() and Game_end_timer.wait_time >= 1:
		Game_end_timer.start()


func _on_button_1_pressed():
	DialogManager.clear_dialog()
	TextManager.clear_text()
	generate_reaction(response[1],0)
	round_end_timer.start(1)
	round_counter += 1
	score.text = \"Score: \"+str(round_counter)


func _on_button_2_pressed():
	DialogManager.clear_dialog()
	TextManager.clear_text()
	generate_reaction(response[2],1)
	round_end_timer.start(1)
	round_counter += 1
	score.text = \"Score: \"+str(round_counter)

func _on_button_3_pressed():
	DialogManager.clear_dialog()
	TextManager.clear_text()
	generate_reaction(response[3],2)
	round_end_timer.start(1)
	round_counter += 1
	score.text = \"Score: \"+str(round_counter)

func _on_button_4_pressed():
	DialogManager.clear_dialog()
	TextManager.clear_text()
	generate_reaction(response[4],3)
	round_end_timer.start(1)
	round_counter += 1
	score.text = \"Score: \"+str(round_counter)

#the end of this timer starts the game
func _on_start_timeout():
	score.text = \"Score: \"+str(round_counter)
	generate_personality()
	dialog_ui = DialogManager._spawn_dialog_box()
	generate_round()
	Game_end_timer.start()
	update_timer.start()	
	
#the end of this timer represents a new round
func _on_round_end_timeout():
	DialogManager.clear_dialog()
	TextManager.clear_text()
	generate_round()

#this timer repesents the end of the game
func _on_game_fuse__timer_timeout():
	fuse_health.set_health(Game_end_timer.time_left,20)
	print(\"GAME OVER\")
	DialogManager.clear_box()
	TextManager.clear_text()
	update_timer.stop()
	round_end_timer.stop()

#calls an update once ever 1 second
func _on_update_timeout():
	calculate_drain()
	fuse_health.set_health(Game_end_timer.time_left,20)
	game_time = Game_end_timer.time_left
	print(Engagement, Romantic, Comfort, Happiness)
"

[sub_resource type="Gradient" id="Gradient_uhf2u"]
offsets = PackedFloat32Array(0, 0.47541, 1)
colors = PackedColorArray(1, 0.75, 0, 1, 1, 0.501961, 0, 1, 1, 0.109804, 0.109804, 0.568627)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_a0832"]
gradient = SubResource("Gradient_uhf2u")

[sub_resource type="Curve" id="Curve_ukb4d"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_s6d4o"]
curve = SubResource("Curve_ukb4d")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_omnk7"]
lifetime_randomness = 0.02
particle_flag_disable_z = true
inherit_velocity_ratio = 1.0
spread = 32.865
gravity = Vector3(0, -300, 0)
scale_max = 2.0
scale_curve = SubResource("CurveTexture_s6d4o")
color_ramp = SubResource("GradientTexture1D_a0832")
turbulence_enabled = true
turbulence_noise_scale = 8.526

[node name="Dating_Scene" type="Node2D"]
scale = Vector2(1.7, 1.7)
script = SubResource("GDScript_r6vsr")

[node name="Bomb" type="Sprite2D" parent="."]
position = Vector2(575.25, 272)
scale = Vector2(0.48619, 0.5)
texture = ExtResource("2_qu584")
script = ExtResource("3_kalhs")

[node name="Fire" parent="Bomb" instance=ExtResource("3_0r45t")]

[node name="Shading" type="ColorRect" parent="."]
z_index = 1
offset_right = 1161.0
offset_bottom = 654.0
color = Color(0, 0, 0, 0.627451)
script = ExtResource("4_lhk8f")

[node name="Label" type="Label" parent="Shading"]
layout_mode = 0
offset_left = 336.0
offset_right = 387.0
offset_bottom = 65.0
scale = Vector2(10, 10)
theme = ExtResource("5_48xbn")
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_offset_x = 0
text = "0"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Start" type="Timer" parent="Shading"]
wait_time = 1.5
one_shot = true
autostart = true

[node name="round_end" type="Timer" parent="."]
one_shot = true

[node name="Game_Fuse_Timer" type="Timer" parent="."]
wait_time = 60.0
one_shot = true

[node name="Fuse" parent="." instance=ExtResource("6_li2h0")]
z_index = 9
offset_left = 117.647
offset_top = 28.2353
offset_right = 1804.65
offset_bottom = 76.2353
scale = Vector2(0.534, 0.534)
script = ExtResource("6_fhqux")

[node name="update" type="Timer" parent="."]

[node name="Background" type="TextureRect" parent="."]
z_index = -2
offset_right = 300.0
offset_bottom = 200.0
scale = Vector2(3.765, 3.765)
texture = ExtResource("7_bw138")

[node name="Table" type="TextureRect" parent="."]
offset_left = 122.353
offset_top = 112.941
offset_right = 1922.35
offset_bottom = 1312.94
scale = Vector2(0.49, 0.49)
texture = ExtResource("8_aot8k")

[node name="Darkness" type="CanvasModulate" parent="."]
color = Color(0.564706, 0.564706, 0.521569, 1)

[node name="UI" type="CanvasLayer" parent="."]

[node name="Score" type="Label" parent="UI"]
offset_left = 64.0
offset_top = 520.0
offset_right = 248.0
offset_bottom = 584.0
scale = Vector2(2, 2)
theme = ExtResource("5_48xbn")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_outline_size = 6
vertical_alignment = 1

[node name="ComfortBar" type="TextureProgressBar" parent="UI"]
offset_left = 64.0
offset_top = 704.0
offset_right = 418.0
offset_bottom = 749.0
theme = ExtResource("5_48xbn")
value = 100.0
texture_under = ExtResource("9_47hvg")
texture_progress = ExtResource("10_lheu7")
texture_progress_offset = Vector2(2, 2)
tint_progress = Color(1, 0, 0, 1)
script = ExtResource("12_qascy")

[node name="Label" type="Label" parent="UI/ComfortBar"]
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 120.0
offset_bottom = 31.0
scale = Vector2(2.06, 2.06)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_outline_size = 6
text = "Comfort"

[node name="EngageBar" type="TextureProgressBar" parent="UI"]
offset_left = 64.0
offset_top = 784.0
offset_right = 422.0
offset_bottom = 833.0
theme = ExtResource("5_48xbn")
value = 100.0
texture_under = ExtResource("9_47hvg")
texture_progress = ExtResource("10_lheu7")
texture_progress_offset = Vector2(2, 2)
tint_progress = Color(1, 0, 0, 1)
script = ExtResource("12_qascy")

[node name="Label" type="Label" parent="UI/EngageBar"]
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 120.0
offset_bottom = 31.0
scale = Vector2(2.06, 2.06)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_outline_size = 6
text = "Engagement"

[node name="RomanceBar" type="TextureProgressBar" parent="UI"]
offset_left = 64.0
offset_top = 864.0
offset_right = 422.0
offset_bottom = 913.0
theme = ExtResource("5_48xbn")
value = 100.0
texture_under = ExtResource("9_47hvg")
texture_progress = ExtResource("10_lheu7")
texture_progress_offset = Vector2(2, 2)
tint_progress = Color(1, 0, 0, 1)
script = ExtResource("12_qascy")

[node name="Label" type="Label" parent="UI/RomanceBar"]
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 120.0
offset_bottom = 31.0
scale = Vector2(2.06, 2.06)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_outline_size = 6
text = "Romance"

[node name="HappinessBar" type="TextureProgressBar" parent="UI"]
offset_left = 64.0
offset_top = 624.0
offset_right = 422.0
offset_bottom = 673.0
theme = ExtResource("5_48xbn")
value = 100.0
texture_under = ExtResource("9_47hvg")
texture_progress = ExtResource("10_lheu7")
texture_progress_offset = Vector2(2, 2)
tint_progress = Color(1, 0, 0, 1)
script = ExtResource("12_qascy")

[node name="Label" type="Label" parent="UI/HappinessBar"]
layout_mode = 0
offset_left = 8.0
offset_top = 8.0
offset_right = 152.0
offset_bottom = 31.0
scale = Vector2(2.06, 2.06)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_outline_size = 6
text = "Happiness"

[node name="candle" type="TextureRect" parent="."]
offset_left = 536.471
offset_top = 381.176
offset_right = 614.471
offset_bottom = 525.177
texture = ExtResource("10_h1f8n")

[node name="Fire" parent="candle" instance=ExtResource("3_0r45t")]
z_index = 1
position = Vector2(37.6471, 37.647)
scale = Vector2(0.49, 0.49)
amount = 10
process_material = SubResource("ParticleProcessMaterial_omnk7")

[node name="Light" type="PointLight2D" parent="candle"]
position = Vector2(-160, -338.823)
scale = Vector2(3.765, 3.765)
texture = ExtResource("9_krnnp")

[connection signal="timeout" from="Shading/Start" to="." method="_on_start_timeout"]
[connection signal="timeout" from="Shading/Start" to="Shading" method="_on_start_timeout"]
[connection signal="timeout" from="round_end" to="." method="_on_round_end_timeout"]
[connection signal="timeout" from="Game_Fuse_Timer" to="." method="_on_game_fuse__timer_timeout"]
[connection signal="timeout" from="update" to="." method="_on_update_timeout"]
